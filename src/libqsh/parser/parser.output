Terminals unused in grammar

   EXPR
   EXPR_INDX
   EXPR_CALL
   VAR_DECL


State 116 conflicts: 3 shift/reduce
State 117 conflicts: 3 shift/reduce
State 118 conflicts: 3 shift/reduce
State 119 conflicts: 2 shift/reduce
State 120 conflicts: 2 shift/reduce
State 170 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 primary_expression: IDENT
    2                   | constant
    3                   | TOK_PAREN_L expression TOK_PAREN_R

    4 constant: LIT_CHAR
    5         | LIT_STRING
    6         | LIT_INT_HEX
    7         | LIT_INT_DEC
    8         | LIT_FLOAT

    9 postfix_expression: primary_expression
   10                   | postfix_expression TOK_SQ_L expression TOK_SQ_R
   11                   | postfix_expression TOK_PAREN_L TOK_PAREN_R
   12                   | postfix_expression TOK_PAREN_L argument_expression_list TOK_PAREN_R
   13                   | postfix_expression OP_INCR
   14                   | postfix_expression OP_DECR

   15 argument_expression_list: assignment_expression
   16                         | argument_expression_list TOK_COMMA assignment_expression

   17 unary_expression: postfix_expression
   18                 | OP_INCR unary_expression
   19                 | OP_DECR unary_expression
   20                 | TOK_PLUS unary_expression
   21                 | TOK_MINUS unary_expression
   22                 | TOK_FLIP unary_expression
   23                 | TOK_NOT unary_expression

   24 multiplicative_expression: unary_expression
   25                          | multiplicative_expression TOK_MUL multiplicative_expression
   26                          | multiplicative_expression TOK_DIV multiplicative_expression
   27                          | multiplicative_expression TOK_MOD multiplicative_expression

   28 additive_expression: multiplicative_expression
   29                    | additive_expression TOK_PLUS additive_expression
   30                    | additive_expression TOK_MINUS additive_expression

   31 shift_expression: additive_expression
   32                 | shift_expression OP_SHIFT_L additive_expression
   33                 | shift_expression OP_SHIFT_R additive_expression

   34 relational_expression: shift_expression
   35                      | relational_expression TOK_LT shift_expression
   36                      | relational_expression TOK_GT shift_expression
   37                      | relational_expression OP_LE shift_expression
   38                      | relational_expression OP_GE shift_expression

   39 equality_expression: relational_expression
   40                    | equality_expression OP_EQ relational_expression
   41                    | equality_expression OP_NE relational_expression

   42 and_expression: equality_expression
   43               | and_expression TOK_AND equality_expression

   44 xor_expression: and_expression
   45               | xor_expression TOK_XOR and_expression

   46 or_expression: xor_expression
   47              | or_expression TOK_OR xor_expression

   48 log_and_expression: or_expression
   49                   | log_and_expression OP_AND or_expression

   50 log_or_expression: log_and_expression
   51                  | log_or_expression OP_OR log_and_expression

   52 conditional_expression: log_or_expression
   53                       | log_or_expression TOK_TERNARY expression TOK_COLON conditional_expression

   54 assignment_expression: conditional_expression
   55                      | unary_expression TOK_ASSIGN assignment_expression

   56 expression: assignment_expression

   57 var_definition: KWD_VAR init_declarator TOK_SEMI

   58 init_declarator: IDENT TOK_ASSIGN assignment_expression
   59                | IDENT TOK_SQ_L TOK_SQ_R TOK_ASSIGN TOK_CURLY_L initializer_list TOK_CURLY_R

   60 initializer_list: assignment_expression
   61                 | initializer_list TOK_COMMA assignment_expression

   62 statement: compound_statement
   63          | expression_statement
   64          | selection_statement
   65          | iteration_statement
   66          | jump_statement

   67 compound_statement: TOK_CURLY_L TOK_CURLY_R
   68                   | TOK_CURLY_L block_item_list TOK_CURLY_R

   69 block_item_list: block_item
   70                | block_item_list block_item

   71 block_item: var_definition
   72           | statement

   73 expression_statement: TOK_SEMI
   74                     | expression TOK_SEMI

   75 selection_statement: KWD_IF TOK_PAREN_L expression TOK_PAREN_R statement KWD_ELSE statement
   76                    | KWD_IF TOK_PAREN_L expression TOK_PAREN_R statement

   77 iteration_statement: KWD_WHILE TOK_PAREN_L expression TOK_PAREN_R statement
   78                    | KWD_FOR TOK_PAREN_L expression_statement expression_statement TOK_PAREN_R statement
   79                    | KWD_FOR TOK_PAREN_L expression_statement expression_statement expression TOK_PAREN_R statement
   80                    | KWD_FOR TOK_PAREN_L var_definition expression_statement TOK_PAREN_R statement
   81                    | KWD_FOR TOK_PAREN_L var_definition expression_statement expression TOK_PAREN_R statement

   82 jump_statement: KWD_CONTINUE TOK_SEMI
   83               | KWD_BREAK TOK_SEMI
   84               | KWD_RETURN TOK_SEMI
   85               | KWD_RETURN expression TOK_SEMI

   86 translation_unit: %empty
   87                 | external_declaration

   88 external_declaration: function_definition
   89                     | var_definition
   90                     | external_declaration function_definition
   91                     | external_declaration var_definition

   92 formal: KWD_VAR IDENT

   93 formals_list: formal
   94             | formals_list TOK_COMMA formal

   95 function_definition: KWD_DEF IDENT TOK_PAREN_L TOK_PAREN_R compound_statement
   96                    | KWD_DEF IDENT TOK_PAREN_L formals_list TOK_PAREN_R compound_statement


Terminals, with rules where they appear

$end (0) 0
error (256)
KWD_BREAK (258) 83
KWD_CONTINUE (259) 82
KWD_DEF (260) 95 96
KWD_ELSE (261) 75
KWD_FOR (262) 78 79 80 81
KWD_IF (263) 75 76
KWD_RETURN (264) 84 85
KWD_VAR (265) 57 92
KWD_WHILE (266) 77
IDENT (267) 1 58 59 92 95 96
LIT_INT_HEX (268) 6
LIT_INT_DEC (269) 7
LIT_FLOAT (270) 8
LIT_CHAR (271) 4
LIT_STRING (272) 5
OP_SHIFT_L (273) 32
OP_SHIFT_R (274) 33
OP_INCR (275) 13 18
OP_DECR (276) 14 19
OP_AND (277) 49
OP_OR (278) 51
OP_LE (279) 37
OP_GE (280) 38
OP_EQ (281) 40
OP_NE (282) 41
TOK_SEMI (283) 57 73 74 82 83 84 85
TOK_CURLY_L (284) 59 67 68
TOK_CURLY_R (285) 59 67 68
TOK_COMMA (286) 16 61 94
TOK_COLON (287) 53
TOK_ASSIGN (288) 55 58 59
TOK_PAREN_L (289) 3 11 12 75 76 77 78 79 80 81 95 96
TOK_PAREN_R (290) 3 11 12 75 76 77 78 79 80 81 95 96
TOK_SQ_L (291) 10 59
TOK_SQ_R (292) 10 59
TOK_AND (293) 43
TOK_OR (294) 47
TOK_NOT (295) 23
TOK_FLIP (296) 22
TOK_MINUS (297) 21 30
TOK_PLUS (298) 20 29
TOK_MUL (299) 25
TOK_DIV (300) 26
TOK_MOD (301) 27
TOK_LT (302) 35
TOK_GT (303) 36
TOK_XOR (304) 45
TOK_TERNARY (305) 53
EXPR (306)
EXPR_INDX (307)
EXPR_CALL (308)
VAR_DECL (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
primary_expression (56)
    on left: 1 2 3, on right: 9
constant (57)
    on left: 4 5 6 7 8, on right: 2
postfix_expression (58)
    on left: 9 10 11 12 13 14, on right: 10 11 12 13 14 17
argument_expression_list (59)
    on left: 15 16, on right: 12 16
unary_expression (60)
    on left: 17 18 19 20 21 22 23, on right: 18 19 20 21 22 23 24 55
multiplicative_expression (61)
    on left: 24 25 26 27, on right: 25 26 27 28
additive_expression (62)
    on left: 28 29 30, on right: 29 30 31 32 33
shift_expression (63)
    on left: 31 32 33, on right: 32 33 34 35 36 37 38
relational_expression (64)
    on left: 34 35 36 37 38, on right: 35 36 37 38 39 40 41
equality_expression (65)
    on left: 39 40 41, on right: 40 41 42 43
and_expression (66)
    on left: 42 43, on right: 43 44 45
xor_expression (67)
    on left: 44 45, on right: 45 46 47
or_expression (68)
    on left: 46 47, on right: 47 48 49
log_and_expression (69)
    on left: 48 49, on right: 49 50 51
log_or_expression (70)
    on left: 50 51, on right: 51 52 53
conditional_expression (71)
    on left: 52 53, on right: 53 54
assignment_expression (72)
    on left: 54 55, on right: 15 16 55 56 58 60 61
expression (73)
    on left: 56, on right: 3 10 53 74 75 76 77 79 81 85
var_definition (74)
    on left: 57, on right: 71 80 81 89 91
init_declarator (75)
    on left: 58 59, on right: 57
initializer_list (76)
    on left: 60 61, on right: 59 61
statement (77)
    on left: 62 63 64 65 66, on right: 72 75 76 77 78 79 80 81
compound_statement (78)
    on left: 67 68, on right: 62 95 96
block_item_list (79)
    on left: 69 70, on right: 68 70
block_item (80)
    on left: 71 72, on right: 69 70
expression_statement (81)
    on left: 73 74, on right: 63 78 79 80 81
selection_statement (82)
    on left: 75 76, on right: 64
iteration_statement (83)
    on left: 77 78 79 80 81, on right: 65
jump_statement (84)
    on left: 82 83 84 85, on right: 66
translation_unit (85)
    on left: 86 87, on right: 0
external_declaration (86)
    on left: 88 89 90 91, on right: 87 90 91
formal (87)
    on left: 92, on right: 93 94
formals_list (88)
    on left: 93 94, on right: 94 96
function_definition (89)
    on left: 95 96, on right: 88 90


State 0

    0 $accept: . translation_unit $end

    KWD_DEF  shift, and go to state 1
    KWD_VAR  shift, and go to state 2

    $default  reduce using rule 86 (translation_unit)

    var_definition        go to state 3
    translation_unit      go to state 4
    external_declaration  go to state 5
    function_definition   go to state 6


State 1

   95 function_definition: KWD_DEF . IDENT TOK_PAREN_L TOK_PAREN_R compound_statement
   96                    | KWD_DEF . IDENT TOK_PAREN_L formals_list TOK_PAREN_R compound_statement

    IDENT  shift, and go to state 7


State 2

   57 var_definition: KWD_VAR . init_declarator TOK_SEMI

    IDENT  shift, and go to state 8

    init_declarator  go to state 9


State 3

   89 external_declaration: var_definition .

    $default  reduce using rule 89 (external_declaration)


State 4

    0 $accept: translation_unit . $end

    $end  shift, and go to state 10


State 5

   87 translation_unit: external_declaration .
   90 external_declaration: external_declaration . function_definition
   91                     | external_declaration . var_definition

    KWD_DEF  shift, and go to state 1
    KWD_VAR  shift, and go to state 2

    $default  reduce using rule 87 (translation_unit)

    var_definition       go to state 11
    function_definition  go to state 12


State 6

   88 external_declaration: function_definition .

    $default  reduce using rule 88 (external_declaration)


State 7

   95 function_definition: KWD_DEF IDENT . TOK_PAREN_L TOK_PAREN_R compound_statement
   96                    | KWD_DEF IDENT . TOK_PAREN_L formals_list TOK_PAREN_R compound_statement

    TOK_PAREN_L  shift, and go to state 13


State 8

   58 init_declarator: IDENT . TOK_ASSIGN assignment_expression
   59                | IDENT . TOK_SQ_L TOK_SQ_R TOK_ASSIGN TOK_CURLY_L initializer_list TOK_CURLY_R

    TOK_ASSIGN  shift, and go to state 14
    TOK_SQ_L    shift, and go to state 15


State 9

   57 var_definition: KWD_VAR init_declarator . TOK_SEMI

    TOK_SEMI  shift, and go to state 16


State 10

    0 $accept: translation_unit $end .

    $default  accept


State 11

   91 external_declaration: external_declaration var_definition .

    $default  reduce using rule 91 (external_declaration)


State 12

   90 external_declaration: external_declaration function_definition .

    $default  reduce using rule 90 (external_declaration)


State 13

   95 function_definition: KWD_DEF IDENT TOK_PAREN_L . TOK_PAREN_R compound_statement
   96                    | KWD_DEF IDENT TOK_PAREN_L . formals_list TOK_PAREN_R compound_statement

    KWD_VAR      shift, and go to state 17
    TOK_PAREN_R  shift, and go to state 18

    formal        go to state 19
    formals_list  go to state 20


State 14

   58 init_declarator: IDENT TOK_ASSIGN . assignment_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 49


State 15

   59 init_declarator: IDENT TOK_SQ_L . TOK_SQ_R TOK_ASSIGN TOK_CURLY_L initializer_list TOK_CURLY_R

    TOK_SQ_R  shift, and go to state 50


State 16

   57 var_definition: KWD_VAR init_declarator TOK_SEMI .

    $default  reduce using rule 57 (var_definition)


State 17

   92 formal: KWD_VAR . IDENT

    IDENT  shift, and go to state 51


State 18

   95 function_definition: KWD_DEF IDENT TOK_PAREN_L TOK_PAREN_R . compound_statement

    TOK_CURLY_L  shift, and go to state 52

    compound_statement  go to state 53


State 19

   93 formals_list: formal .

    $default  reduce using rule 93 (formals_list)


State 20

   94 formals_list: formals_list . TOK_COMMA formal
   96 function_definition: KWD_DEF IDENT TOK_PAREN_L formals_list . TOK_PAREN_R compound_statement

    TOK_COMMA    shift, and go to state 54
    TOK_PAREN_R  shift, and go to state 55


State 21

    1 primary_expression: IDENT .

    $default  reduce using rule 1 (primary_expression)


State 22

    6 constant: LIT_INT_HEX .

    $default  reduce using rule 6 (constant)


State 23

    7 constant: LIT_INT_DEC .

    $default  reduce using rule 7 (constant)


State 24

    8 constant: LIT_FLOAT .

    $default  reduce using rule 8 (constant)


State 25

    4 constant: LIT_CHAR .

    $default  reduce using rule 4 (constant)


State 26

    5 constant: LIT_STRING .

    $default  reduce using rule 5 (constant)


State 27

   18 unary_expression: OP_INCR . unary_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression  go to state 34
    constant            go to state 35
    postfix_expression  go to state 36
    unary_expression    go to state 56


State 28

   19 unary_expression: OP_DECR . unary_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression  go to state 34
    constant            go to state 35
    postfix_expression  go to state 36
    unary_expression    go to state 57


State 29

    3 primary_expression: TOK_PAREN_L . expression TOK_PAREN_R

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 58
    expression                 go to state 59


State 30

   23 unary_expression: TOK_NOT . unary_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression  go to state 34
    constant            go to state 35
    postfix_expression  go to state 36
    unary_expression    go to state 60


State 31

   22 unary_expression: TOK_FLIP . unary_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression  go to state 34
    constant            go to state 35
    postfix_expression  go to state 36
    unary_expression    go to state 61


State 32

   21 unary_expression: TOK_MINUS . unary_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression  go to state 34
    constant            go to state 35
    postfix_expression  go to state 36
    unary_expression    go to state 62


State 33

   20 unary_expression: TOK_PLUS . unary_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression  go to state 34
    constant            go to state 35
    postfix_expression  go to state 36
    unary_expression    go to state 63


State 34

    9 postfix_expression: primary_expression .

    $default  reduce using rule 9 (postfix_expression)


State 35

    2 primary_expression: constant .

    $default  reduce using rule 2 (primary_expression)


State 36

   10 postfix_expression: postfix_expression . TOK_SQ_L expression TOK_SQ_R
   11                   | postfix_expression . TOK_PAREN_L TOK_PAREN_R
   12                   | postfix_expression . TOK_PAREN_L argument_expression_list TOK_PAREN_R
   13                   | postfix_expression . OP_INCR
   14                   | postfix_expression . OP_DECR
   17 unary_expression: postfix_expression .

    OP_INCR      shift, and go to state 64
    OP_DECR      shift, and go to state 65
    TOK_PAREN_L  shift, and go to state 66
    TOK_SQ_L     shift, and go to state 67

    $default  reduce using rule 17 (unary_expression)


State 37

   24 multiplicative_expression: unary_expression .
   55 assignment_expression: unary_expression . TOK_ASSIGN assignment_expression

    TOK_ASSIGN  shift, and go to state 68

    $default  reduce using rule 24 (multiplicative_expression)


State 38

   25 multiplicative_expression: multiplicative_expression . TOK_MUL multiplicative_expression
   26                          | multiplicative_expression . TOK_DIV multiplicative_expression
   27                          | multiplicative_expression . TOK_MOD multiplicative_expression
   28 additive_expression: multiplicative_expression .

    TOK_MUL  shift, and go to state 69
    TOK_DIV  shift, and go to state 70
    TOK_MOD  shift, and go to state 71

    $default  reduce using rule 28 (additive_expression)


State 39

   29 additive_expression: additive_expression . TOK_PLUS additive_expression
   30                    | additive_expression . TOK_MINUS additive_expression
   31 shift_expression: additive_expression .

    TOK_MINUS  shift, and go to state 72
    TOK_PLUS   shift, and go to state 73

    $default  reduce using rule 31 (shift_expression)


State 40

   32 shift_expression: shift_expression . OP_SHIFT_L additive_expression
   33                 | shift_expression . OP_SHIFT_R additive_expression
   34 relational_expression: shift_expression .

    OP_SHIFT_L  shift, and go to state 74
    OP_SHIFT_R  shift, and go to state 75

    $default  reduce using rule 34 (relational_expression)


State 41

   35 relational_expression: relational_expression . TOK_LT shift_expression
   36                      | relational_expression . TOK_GT shift_expression
   37                      | relational_expression . OP_LE shift_expression
   38                      | relational_expression . OP_GE shift_expression
   39 equality_expression: relational_expression .

    OP_LE   shift, and go to state 76
    OP_GE   shift, and go to state 77
    TOK_LT  shift, and go to state 78
    TOK_GT  shift, and go to state 79

    $default  reduce using rule 39 (equality_expression)


State 42

   40 equality_expression: equality_expression . OP_EQ relational_expression
   41                    | equality_expression . OP_NE relational_expression
   42 and_expression: equality_expression .

    OP_EQ  shift, and go to state 80
    OP_NE  shift, and go to state 81

    $default  reduce using rule 42 (and_expression)


State 43

   43 and_expression: and_expression . TOK_AND equality_expression
   44 xor_expression: and_expression .

    TOK_AND  shift, and go to state 82

    $default  reduce using rule 44 (xor_expression)


State 44

   45 xor_expression: xor_expression . TOK_XOR and_expression
   46 or_expression: xor_expression .

    TOK_XOR  shift, and go to state 83

    $default  reduce using rule 46 (or_expression)


State 45

   47 or_expression: or_expression . TOK_OR xor_expression
   48 log_and_expression: or_expression .

    TOK_OR  shift, and go to state 84

    $default  reduce using rule 48 (log_and_expression)


State 46

   49 log_and_expression: log_and_expression . OP_AND or_expression
   50 log_or_expression: log_and_expression .

    OP_AND  shift, and go to state 85

    $default  reduce using rule 50 (log_or_expression)


State 47

   51 log_or_expression: log_or_expression . OP_OR log_and_expression
   52 conditional_expression: log_or_expression .
   53                       | log_or_expression . TOK_TERNARY expression TOK_COLON conditional_expression

    OP_OR        shift, and go to state 86
    TOK_TERNARY  shift, and go to state 87

    $default  reduce using rule 52 (conditional_expression)


State 48

   54 assignment_expression: conditional_expression .

    $default  reduce using rule 54 (assignment_expression)


State 49

   58 init_declarator: IDENT TOK_ASSIGN assignment_expression .

    $default  reduce using rule 58 (init_declarator)


State 50

   59 init_declarator: IDENT TOK_SQ_L TOK_SQ_R . TOK_ASSIGN TOK_CURLY_L initializer_list TOK_CURLY_R

    TOK_ASSIGN  shift, and go to state 88


State 51

   92 formal: KWD_VAR IDENT .

    $default  reduce using rule 92 (formal)


State 52

   67 compound_statement: TOK_CURLY_L . TOK_CURLY_R
   68                   | TOK_CURLY_L . block_item_list TOK_CURLY_R

    KWD_BREAK     shift, and go to state 89
    KWD_CONTINUE  shift, and go to state 90
    KWD_FOR       shift, and go to state 91
    KWD_IF        shift, and go to state 92
    KWD_RETURN    shift, and go to state 93
    KWD_VAR       shift, and go to state 2
    KWD_WHILE     shift, and go to state 94
    IDENT         shift, and go to state 21
    LIT_INT_HEX   shift, and go to state 22
    LIT_INT_DEC   shift, and go to state 23
    LIT_FLOAT     shift, and go to state 24
    LIT_CHAR      shift, and go to state 25
    LIT_STRING    shift, and go to state 26
    OP_INCR       shift, and go to state 27
    OP_DECR       shift, and go to state 28
    TOK_SEMI      shift, and go to state 95
    TOK_CURLY_L   shift, and go to state 52
    TOK_CURLY_R   shift, and go to state 96
    TOK_PAREN_L   shift, and go to state 29
    TOK_NOT       shift, and go to state 30
    TOK_FLIP      shift, and go to state 31
    TOK_MINUS     shift, and go to state 32
    TOK_PLUS      shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 58
    expression                 go to state 97
    var_definition             go to state 98
    statement                  go to state 99
    compound_statement         go to state 100
    block_item_list            go to state 101
    block_item                 go to state 102
    expression_statement       go to state 103
    selection_statement        go to state 104
    iteration_statement        go to state 105
    jump_statement             go to state 106


State 53

   95 function_definition: KWD_DEF IDENT TOK_PAREN_L TOK_PAREN_R compound_statement .

    $default  reduce using rule 95 (function_definition)


State 54

   94 formals_list: formals_list TOK_COMMA . formal

    KWD_VAR  shift, and go to state 17

    formal  go to state 107


State 55

   96 function_definition: KWD_DEF IDENT TOK_PAREN_L formals_list TOK_PAREN_R . compound_statement

    TOK_CURLY_L  shift, and go to state 52

    compound_statement  go to state 108


State 56

   18 unary_expression: OP_INCR unary_expression .

    $default  reduce using rule 18 (unary_expression)


State 57

   19 unary_expression: OP_DECR unary_expression .

    $default  reduce using rule 19 (unary_expression)


State 58

   56 expression: assignment_expression .

    $default  reduce using rule 56 (expression)


State 59

    3 primary_expression: TOK_PAREN_L expression . TOK_PAREN_R

    TOK_PAREN_R  shift, and go to state 109


State 60

   23 unary_expression: TOK_NOT unary_expression .

    $default  reduce using rule 23 (unary_expression)


State 61

   22 unary_expression: TOK_FLIP unary_expression .

    $default  reduce using rule 22 (unary_expression)


State 62

   21 unary_expression: TOK_MINUS unary_expression .

    $default  reduce using rule 21 (unary_expression)


State 63

   20 unary_expression: TOK_PLUS unary_expression .

    $default  reduce using rule 20 (unary_expression)


State 64

   13 postfix_expression: postfix_expression OP_INCR .

    $default  reduce using rule 13 (postfix_expression)


State 65

   14 postfix_expression: postfix_expression OP_DECR .

    $default  reduce using rule 14 (postfix_expression)


State 66

   11 postfix_expression: postfix_expression TOK_PAREN_L . TOK_PAREN_R
   12                   | postfix_expression TOK_PAREN_L . argument_expression_list TOK_PAREN_R

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_PAREN_R  shift, and go to state 110
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    argument_expression_list   go to state 111
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 112


State 67

   10 postfix_expression: postfix_expression TOK_SQ_L . expression TOK_SQ_R

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 58
    expression                 go to state 113


State 68

   55 assignment_expression: unary_expression TOK_ASSIGN . assignment_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 114


State 69

   25 multiplicative_expression: multiplicative_expression TOK_MUL . multiplicative_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 115
    multiplicative_expression  go to state 116


State 70

   26 multiplicative_expression: multiplicative_expression TOK_DIV . multiplicative_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 115
    multiplicative_expression  go to state 117


State 71

   27 multiplicative_expression: multiplicative_expression TOK_MOD . multiplicative_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 115
    multiplicative_expression  go to state 118


State 72

   30 additive_expression: additive_expression TOK_MINUS . additive_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 115
    multiplicative_expression  go to state 38
    additive_expression        go to state 119


State 73

   29 additive_expression: additive_expression TOK_PLUS . additive_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 115
    multiplicative_expression  go to state 38
    additive_expression        go to state 120


State 74

   32 shift_expression: shift_expression OP_SHIFT_L . additive_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 115
    multiplicative_expression  go to state 38
    additive_expression        go to state 121


State 75

   33 shift_expression: shift_expression OP_SHIFT_R . additive_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 115
    multiplicative_expression  go to state 38
    additive_expression        go to state 122


State 76

   37 relational_expression: relational_expression OP_LE . shift_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 115
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 123


State 77

   38 relational_expression: relational_expression OP_GE . shift_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 115
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 124


State 78

   35 relational_expression: relational_expression TOK_LT . shift_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 115
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 125


State 79

   36 relational_expression: relational_expression TOK_GT . shift_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 115
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 126


State 80

   40 equality_expression: equality_expression OP_EQ . relational_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 115
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 127


State 81

   41 equality_expression: equality_expression OP_NE . relational_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 115
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 128


State 82

   43 and_expression: and_expression TOK_AND . equality_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 115
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 129


State 83

   45 xor_expression: xor_expression TOK_XOR . and_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 115
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 130


State 84

   47 or_expression: or_expression TOK_OR . xor_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 115
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 131


State 85

   49 log_and_expression: log_and_expression OP_AND . or_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 115
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 132


State 86

   51 log_or_expression: log_or_expression OP_OR . log_and_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 115
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 133


State 87

   53 conditional_expression: log_or_expression TOK_TERNARY . expression TOK_COLON conditional_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 58
    expression                 go to state 134


State 88

   59 init_declarator: IDENT TOK_SQ_L TOK_SQ_R TOK_ASSIGN . TOK_CURLY_L initializer_list TOK_CURLY_R

    TOK_CURLY_L  shift, and go to state 135


State 89

   83 jump_statement: KWD_BREAK . TOK_SEMI

    TOK_SEMI  shift, and go to state 136


State 90

   82 jump_statement: KWD_CONTINUE . TOK_SEMI

    TOK_SEMI  shift, and go to state 137


State 91

   78 iteration_statement: KWD_FOR . TOK_PAREN_L expression_statement expression_statement TOK_PAREN_R statement
   79                    | KWD_FOR . TOK_PAREN_L expression_statement expression_statement expression TOK_PAREN_R statement
   80                    | KWD_FOR . TOK_PAREN_L var_definition expression_statement TOK_PAREN_R statement
   81                    | KWD_FOR . TOK_PAREN_L var_definition expression_statement expression TOK_PAREN_R statement

    TOK_PAREN_L  shift, and go to state 138


State 92

   75 selection_statement: KWD_IF . TOK_PAREN_L expression TOK_PAREN_R statement KWD_ELSE statement
   76                    | KWD_IF . TOK_PAREN_L expression TOK_PAREN_R statement

    TOK_PAREN_L  shift, and go to state 139


State 93

   84 jump_statement: KWD_RETURN . TOK_SEMI
   85               | KWD_RETURN . expression TOK_SEMI

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_SEMI     shift, and go to state 140
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 58
    expression                 go to state 141


State 94

   77 iteration_statement: KWD_WHILE . TOK_PAREN_L expression TOK_PAREN_R statement

    TOK_PAREN_L  shift, and go to state 142


State 95

   73 expression_statement: TOK_SEMI .

    $default  reduce using rule 73 (expression_statement)


State 96

   67 compound_statement: TOK_CURLY_L TOK_CURLY_R .

    $default  reduce using rule 67 (compound_statement)


State 97

   74 expression_statement: expression . TOK_SEMI

    TOK_SEMI  shift, and go to state 143


State 98

   71 block_item: var_definition .

    $default  reduce using rule 71 (block_item)


State 99

   72 block_item: statement .

    $default  reduce using rule 72 (block_item)


State 100

   62 statement: compound_statement .

    $default  reduce using rule 62 (statement)


State 101

   68 compound_statement: TOK_CURLY_L block_item_list . TOK_CURLY_R
   70 block_item_list: block_item_list . block_item

    KWD_BREAK     shift, and go to state 89
    KWD_CONTINUE  shift, and go to state 90
    KWD_FOR       shift, and go to state 91
    KWD_IF        shift, and go to state 92
    KWD_RETURN    shift, and go to state 93
    KWD_VAR       shift, and go to state 2
    KWD_WHILE     shift, and go to state 94
    IDENT         shift, and go to state 21
    LIT_INT_HEX   shift, and go to state 22
    LIT_INT_DEC   shift, and go to state 23
    LIT_FLOAT     shift, and go to state 24
    LIT_CHAR      shift, and go to state 25
    LIT_STRING    shift, and go to state 26
    OP_INCR       shift, and go to state 27
    OP_DECR       shift, and go to state 28
    TOK_SEMI      shift, and go to state 95
    TOK_CURLY_L   shift, and go to state 52
    TOK_CURLY_R   shift, and go to state 144
    TOK_PAREN_L   shift, and go to state 29
    TOK_NOT       shift, and go to state 30
    TOK_FLIP      shift, and go to state 31
    TOK_MINUS     shift, and go to state 32
    TOK_PLUS      shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 58
    expression                 go to state 97
    var_definition             go to state 98
    statement                  go to state 99
    compound_statement         go to state 100
    block_item                 go to state 145
    expression_statement       go to state 103
    selection_statement        go to state 104
    iteration_statement        go to state 105
    jump_statement             go to state 106


State 102

   69 block_item_list: block_item .

    $default  reduce using rule 69 (block_item_list)


State 103

   63 statement: expression_statement .

    $default  reduce using rule 63 (statement)


State 104

   64 statement: selection_statement .

    $default  reduce using rule 64 (statement)


State 105

   65 statement: iteration_statement .

    $default  reduce using rule 65 (statement)


State 106

   66 statement: jump_statement .

    $default  reduce using rule 66 (statement)


State 107

   94 formals_list: formals_list TOK_COMMA formal .

    $default  reduce using rule 94 (formals_list)


State 108

   96 function_definition: KWD_DEF IDENT TOK_PAREN_L formals_list TOK_PAREN_R compound_statement .

    $default  reduce using rule 96 (function_definition)


State 109

    3 primary_expression: TOK_PAREN_L expression TOK_PAREN_R .

    $default  reduce using rule 3 (primary_expression)


State 110

   11 postfix_expression: postfix_expression TOK_PAREN_L TOK_PAREN_R .

    $default  reduce using rule 11 (postfix_expression)


State 111

   12 postfix_expression: postfix_expression TOK_PAREN_L argument_expression_list . TOK_PAREN_R
   16 argument_expression_list: argument_expression_list . TOK_COMMA assignment_expression

    TOK_COMMA    shift, and go to state 146
    TOK_PAREN_R  shift, and go to state 147


State 112

   15 argument_expression_list: assignment_expression .

    $default  reduce using rule 15 (argument_expression_list)


State 113

   10 postfix_expression: postfix_expression TOK_SQ_L expression . TOK_SQ_R

    TOK_SQ_R  shift, and go to state 148


State 114

   55 assignment_expression: unary_expression TOK_ASSIGN assignment_expression .

    $default  reduce using rule 55 (assignment_expression)


State 115

   24 multiplicative_expression: unary_expression .

    $default  reduce using rule 24 (multiplicative_expression)


State 116

   25 multiplicative_expression: multiplicative_expression . TOK_MUL multiplicative_expression
   25                          | multiplicative_expression TOK_MUL multiplicative_expression .
   26                          | multiplicative_expression . TOK_DIV multiplicative_expression
   27                          | multiplicative_expression . TOK_MOD multiplicative_expression

    TOK_MUL  shift, and go to state 69
    TOK_DIV  shift, and go to state 70
    TOK_MOD  shift, and go to state 71

    TOK_MUL   [reduce using rule 25 (multiplicative_expression)]
    TOK_DIV   [reduce using rule 25 (multiplicative_expression)]
    TOK_MOD   [reduce using rule 25 (multiplicative_expression)]
    $default  reduce using rule 25 (multiplicative_expression)


State 117

   25 multiplicative_expression: multiplicative_expression . TOK_MUL multiplicative_expression
   26                          | multiplicative_expression . TOK_DIV multiplicative_expression
   26                          | multiplicative_expression TOK_DIV multiplicative_expression .
   27                          | multiplicative_expression . TOK_MOD multiplicative_expression

    TOK_MUL  shift, and go to state 69
    TOK_DIV  shift, and go to state 70
    TOK_MOD  shift, and go to state 71

    TOK_MUL   [reduce using rule 26 (multiplicative_expression)]
    TOK_DIV   [reduce using rule 26 (multiplicative_expression)]
    TOK_MOD   [reduce using rule 26 (multiplicative_expression)]
    $default  reduce using rule 26 (multiplicative_expression)


State 118

   25 multiplicative_expression: multiplicative_expression . TOK_MUL multiplicative_expression
   26                          | multiplicative_expression . TOK_DIV multiplicative_expression
   27                          | multiplicative_expression . TOK_MOD multiplicative_expression
   27                          | multiplicative_expression TOK_MOD multiplicative_expression .

    TOK_MUL  shift, and go to state 69
    TOK_DIV  shift, and go to state 70
    TOK_MOD  shift, and go to state 71

    TOK_MUL   [reduce using rule 27 (multiplicative_expression)]
    TOK_DIV   [reduce using rule 27 (multiplicative_expression)]
    TOK_MOD   [reduce using rule 27 (multiplicative_expression)]
    $default  reduce using rule 27 (multiplicative_expression)


State 119

   29 additive_expression: additive_expression . TOK_PLUS additive_expression
   30                    | additive_expression . TOK_MINUS additive_expression
   30                    | additive_expression TOK_MINUS additive_expression .

    TOK_MINUS  shift, and go to state 72
    TOK_PLUS   shift, and go to state 73

    TOK_MINUS  [reduce using rule 30 (additive_expression)]
    TOK_PLUS   [reduce using rule 30 (additive_expression)]
    $default   reduce using rule 30 (additive_expression)


State 120

   29 additive_expression: additive_expression . TOK_PLUS additive_expression
   29                    | additive_expression TOK_PLUS additive_expression .
   30                    | additive_expression . TOK_MINUS additive_expression

    TOK_MINUS  shift, and go to state 72
    TOK_PLUS   shift, and go to state 73

    TOK_MINUS  [reduce using rule 29 (additive_expression)]
    TOK_PLUS   [reduce using rule 29 (additive_expression)]
    $default   reduce using rule 29 (additive_expression)


State 121

   29 additive_expression: additive_expression . TOK_PLUS additive_expression
   30                    | additive_expression . TOK_MINUS additive_expression
   32 shift_expression: shift_expression OP_SHIFT_L additive_expression .

    TOK_MINUS  shift, and go to state 72
    TOK_PLUS   shift, and go to state 73

    $default  reduce using rule 32 (shift_expression)


State 122

   29 additive_expression: additive_expression . TOK_PLUS additive_expression
   30                    | additive_expression . TOK_MINUS additive_expression
   33 shift_expression: shift_expression OP_SHIFT_R additive_expression .

    TOK_MINUS  shift, and go to state 72
    TOK_PLUS   shift, and go to state 73

    $default  reduce using rule 33 (shift_expression)


State 123

   32 shift_expression: shift_expression . OP_SHIFT_L additive_expression
   33                 | shift_expression . OP_SHIFT_R additive_expression
   37 relational_expression: relational_expression OP_LE shift_expression .

    OP_SHIFT_L  shift, and go to state 74
    OP_SHIFT_R  shift, and go to state 75

    $default  reduce using rule 37 (relational_expression)


State 124

   32 shift_expression: shift_expression . OP_SHIFT_L additive_expression
   33                 | shift_expression . OP_SHIFT_R additive_expression
   38 relational_expression: relational_expression OP_GE shift_expression .

    OP_SHIFT_L  shift, and go to state 74
    OP_SHIFT_R  shift, and go to state 75

    $default  reduce using rule 38 (relational_expression)


State 125

   32 shift_expression: shift_expression . OP_SHIFT_L additive_expression
   33                 | shift_expression . OP_SHIFT_R additive_expression
   35 relational_expression: relational_expression TOK_LT shift_expression .

    OP_SHIFT_L  shift, and go to state 74
    OP_SHIFT_R  shift, and go to state 75

    $default  reduce using rule 35 (relational_expression)


State 126

   32 shift_expression: shift_expression . OP_SHIFT_L additive_expression
   33                 | shift_expression . OP_SHIFT_R additive_expression
   36 relational_expression: relational_expression TOK_GT shift_expression .

    OP_SHIFT_L  shift, and go to state 74
    OP_SHIFT_R  shift, and go to state 75

    $default  reduce using rule 36 (relational_expression)


State 127

   35 relational_expression: relational_expression . TOK_LT shift_expression
   36                      | relational_expression . TOK_GT shift_expression
   37                      | relational_expression . OP_LE shift_expression
   38                      | relational_expression . OP_GE shift_expression
   40 equality_expression: equality_expression OP_EQ relational_expression .

    OP_LE   shift, and go to state 76
    OP_GE   shift, and go to state 77
    TOK_LT  shift, and go to state 78
    TOK_GT  shift, and go to state 79

    $default  reduce using rule 40 (equality_expression)


State 128

   35 relational_expression: relational_expression . TOK_LT shift_expression
   36                      | relational_expression . TOK_GT shift_expression
   37                      | relational_expression . OP_LE shift_expression
   38                      | relational_expression . OP_GE shift_expression
   41 equality_expression: equality_expression OP_NE relational_expression .

    OP_LE   shift, and go to state 76
    OP_GE   shift, and go to state 77
    TOK_LT  shift, and go to state 78
    TOK_GT  shift, and go to state 79

    $default  reduce using rule 41 (equality_expression)


State 129

   40 equality_expression: equality_expression . OP_EQ relational_expression
   41                    | equality_expression . OP_NE relational_expression
   43 and_expression: and_expression TOK_AND equality_expression .

    OP_EQ  shift, and go to state 80
    OP_NE  shift, and go to state 81

    $default  reduce using rule 43 (and_expression)


State 130

   43 and_expression: and_expression . TOK_AND equality_expression
   45 xor_expression: xor_expression TOK_XOR and_expression .

    TOK_AND  shift, and go to state 82

    $default  reduce using rule 45 (xor_expression)


State 131

   45 xor_expression: xor_expression . TOK_XOR and_expression
   47 or_expression: or_expression TOK_OR xor_expression .

    TOK_XOR  shift, and go to state 83

    $default  reduce using rule 47 (or_expression)


State 132

   47 or_expression: or_expression . TOK_OR xor_expression
   49 log_and_expression: log_and_expression OP_AND or_expression .

    TOK_OR  shift, and go to state 84

    $default  reduce using rule 49 (log_and_expression)


State 133

   49 log_and_expression: log_and_expression . OP_AND or_expression
   51 log_or_expression: log_or_expression OP_OR log_and_expression .

    OP_AND  shift, and go to state 85

    $default  reduce using rule 51 (log_or_expression)


State 134

   53 conditional_expression: log_or_expression TOK_TERNARY expression . TOK_COLON conditional_expression

    TOK_COLON  shift, and go to state 149


State 135

   59 init_declarator: IDENT TOK_SQ_L TOK_SQ_R TOK_ASSIGN TOK_CURLY_L . initializer_list TOK_CURLY_R

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 150
    initializer_list           go to state 151


State 136

   83 jump_statement: KWD_BREAK TOK_SEMI .

    $default  reduce using rule 83 (jump_statement)


State 137

   82 jump_statement: KWD_CONTINUE TOK_SEMI .

    $default  reduce using rule 82 (jump_statement)


State 138

   78 iteration_statement: KWD_FOR TOK_PAREN_L . expression_statement expression_statement TOK_PAREN_R statement
   79                    | KWD_FOR TOK_PAREN_L . expression_statement expression_statement expression TOK_PAREN_R statement
   80                    | KWD_FOR TOK_PAREN_L . var_definition expression_statement TOK_PAREN_R statement
   81                    | KWD_FOR TOK_PAREN_L . var_definition expression_statement expression TOK_PAREN_R statement

    KWD_VAR      shift, and go to state 2
    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_SEMI     shift, and go to state 95
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 58
    expression                 go to state 97
    var_definition             go to state 152
    expression_statement       go to state 153


State 139

   75 selection_statement: KWD_IF TOK_PAREN_L . expression TOK_PAREN_R statement KWD_ELSE statement
   76                    | KWD_IF TOK_PAREN_L . expression TOK_PAREN_R statement

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 58
    expression                 go to state 154


State 140

   84 jump_statement: KWD_RETURN TOK_SEMI .

    $default  reduce using rule 84 (jump_statement)


State 141

   85 jump_statement: KWD_RETURN expression . TOK_SEMI

    TOK_SEMI  shift, and go to state 155


State 142

   77 iteration_statement: KWD_WHILE TOK_PAREN_L . expression TOK_PAREN_R statement

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 58
    expression                 go to state 156


State 143

   74 expression_statement: expression TOK_SEMI .

    $default  reduce using rule 74 (expression_statement)


State 144

   68 compound_statement: TOK_CURLY_L block_item_list TOK_CURLY_R .

    $default  reduce using rule 68 (compound_statement)


State 145

   70 block_item_list: block_item_list block_item .

    $default  reduce using rule 70 (block_item_list)


State 146

   16 argument_expression_list: argument_expression_list TOK_COMMA . assignment_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 157


State 147

   12 postfix_expression: postfix_expression TOK_PAREN_L argument_expression_list TOK_PAREN_R .

    $default  reduce using rule 12 (postfix_expression)


State 148

   10 postfix_expression: postfix_expression TOK_SQ_L expression TOK_SQ_R .

    $default  reduce using rule 10 (postfix_expression)


State 149

   53 conditional_expression: log_or_expression TOK_TERNARY expression TOK_COLON . conditional_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 115
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 158


State 150

   60 initializer_list: assignment_expression .

    $default  reduce using rule 60 (initializer_list)


State 151

   59 init_declarator: IDENT TOK_SQ_L TOK_SQ_R TOK_ASSIGN TOK_CURLY_L initializer_list . TOK_CURLY_R
   61 initializer_list: initializer_list . TOK_COMMA assignment_expression

    TOK_CURLY_R  shift, and go to state 159
    TOK_COMMA    shift, and go to state 160


State 152

   80 iteration_statement: KWD_FOR TOK_PAREN_L var_definition . expression_statement TOK_PAREN_R statement
   81                    | KWD_FOR TOK_PAREN_L var_definition . expression_statement expression TOK_PAREN_R statement

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_SEMI     shift, and go to state 95
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 58
    expression                 go to state 97
    expression_statement       go to state 161


State 153

   78 iteration_statement: KWD_FOR TOK_PAREN_L expression_statement . expression_statement TOK_PAREN_R statement
   79                    | KWD_FOR TOK_PAREN_L expression_statement . expression_statement expression TOK_PAREN_R statement

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_SEMI     shift, and go to state 95
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 58
    expression                 go to state 97
    expression_statement       go to state 162


State 154

   75 selection_statement: KWD_IF TOK_PAREN_L expression . TOK_PAREN_R statement KWD_ELSE statement
   76                    | KWD_IF TOK_PAREN_L expression . TOK_PAREN_R statement

    TOK_PAREN_R  shift, and go to state 163


State 155

   85 jump_statement: KWD_RETURN expression TOK_SEMI .

    $default  reduce using rule 85 (jump_statement)


State 156

   77 iteration_statement: KWD_WHILE TOK_PAREN_L expression . TOK_PAREN_R statement

    TOK_PAREN_R  shift, and go to state 164


State 157

   16 argument_expression_list: argument_expression_list TOK_COMMA assignment_expression .

    $default  reduce using rule 16 (argument_expression_list)


State 158

   53 conditional_expression: log_or_expression TOK_TERNARY expression TOK_COLON conditional_expression .

    $default  reduce using rule 53 (conditional_expression)


State 159

   59 init_declarator: IDENT TOK_SQ_L TOK_SQ_R TOK_ASSIGN TOK_CURLY_L initializer_list TOK_CURLY_R .

    $default  reduce using rule 59 (init_declarator)


State 160

   61 initializer_list: initializer_list TOK_COMMA . assignment_expression

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 165


State 161

   80 iteration_statement: KWD_FOR TOK_PAREN_L var_definition expression_statement . TOK_PAREN_R statement
   81                    | KWD_FOR TOK_PAREN_L var_definition expression_statement . expression TOK_PAREN_R statement

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_PAREN_R  shift, and go to state 166
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 58
    expression                 go to state 167


State 162

   78 iteration_statement: KWD_FOR TOK_PAREN_L expression_statement expression_statement . TOK_PAREN_R statement
   79                    | KWD_FOR TOK_PAREN_L expression_statement expression_statement . expression TOK_PAREN_R statement

    IDENT        shift, and go to state 21
    LIT_INT_HEX  shift, and go to state 22
    LIT_INT_DEC  shift, and go to state 23
    LIT_FLOAT    shift, and go to state 24
    LIT_CHAR     shift, and go to state 25
    LIT_STRING   shift, and go to state 26
    OP_INCR      shift, and go to state 27
    OP_DECR      shift, and go to state 28
    TOK_PAREN_L  shift, and go to state 29
    TOK_PAREN_R  shift, and go to state 168
    TOK_NOT      shift, and go to state 30
    TOK_FLIP     shift, and go to state 31
    TOK_MINUS    shift, and go to state 32
    TOK_PLUS     shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 58
    expression                 go to state 169


State 163

   75 selection_statement: KWD_IF TOK_PAREN_L expression TOK_PAREN_R . statement KWD_ELSE statement
   76                    | KWD_IF TOK_PAREN_L expression TOK_PAREN_R . statement

    KWD_BREAK     shift, and go to state 89
    KWD_CONTINUE  shift, and go to state 90
    KWD_FOR       shift, and go to state 91
    KWD_IF        shift, and go to state 92
    KWD_RETURN    shift, and go to state 93
    KWD_WHILE     shift, and go to state 94
    IDENT         shift, and go to state 21
    LIT_INT_HEX   shift, and go to state 22
    LIT_INT_DEC   shift, and go to state 23
    LIT_FLOAT     shift, and go to state 24
    LIT_CHAR      shift, and go to state 25
    LIT_STRING    shift, and go to state 26
    OP_INCR       shift, and go to state 27
    OP_DECR       shift, and go to state 28
    TOK_SEMI      shift, and go to state 95
    TOK_CURLY_L   shift, and go to state 52
    TOK_PAREN_L   shift, and go to state 29
    TOK_NOT       shift, and go to state 30
    TOK_FLIP      shift, and go to state 31
    TOK_MINUS     shift, and go to state 32
    TOK_PLUS      shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 58
    expression                 go to state 97
    statement                  go to state 170
    compound_statement         go to state 100
    expression_statement       go to state 103
    selection_statement        go to state 104
    iteration_statement        go to state 105
    jump_statement             go to state 106


State 164

   77 iteration_statement: KWD_WHILE TOK_PAREN_L expression TOK_PAREN_R . statement

    KWD_BREAK     shift, and go to state 89
    KWD_CONTINUE  shift, and go to state 90
    KWD_FOR       shift, and go to state 91
    KWD_IF        shift, and go to state 92
    KWD_RETURN    shift, and go to state 93
    KWD_WHILE     shift, and go to state 94
    IDENT         shift, and go to state 21
    LIT_INT_HEX   shift, and go to state 22
    LIT_INT_DEC   shift, and go to state 23
    LIT_FLOAT     shift, and go to state 24
    LIT_CHAR      shift, and go to state 25
    LIT_STRING    shift, and go to state 26
    OP_INCR       shift, and go to state 27
    OP_DECR       shift, and go to state 28
    TOK_SEMI      shift, and go to state 95
    TOK_CURLY_L   shift, and go to state 52
    TOK_PAREN_L   shift, and go to state 29
    TOK_NOT       shift, and go to state 30
    TOK_FLIP      shift, and go to state 31
    TOK_MINUS     shift, and go to state 32
    TOK_PLUS      shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 58
    expression                 go to state 97
    statement                  go to state 171
    compound_statement         go to state 100
    expression_statement       go to state 103
    selection_statement        go to state 104
    iteration_statement        go to state 105
    jump_statement             go to state 106


State 165

   61 initializer_list: initializer_list TOK_COMMA assignment_expression .

    $default  reduce using rule 61 (initializer_list)


State 166

   80 iteration_statement: KWD_FOR TOK_PAREN_L var_definition expression_statement TOK_PAREN_R . statement

    KWD_BREAK     shift, and go to state 89
    KWD_CONTINUE  shift, and go to state 90
    KWD_FOR       shift, and go to state 91
    KWD_IF        shift, and go to state 92
    KWD_RETURN    shift, and go to state 93
    KWD_WHILE     shift, and go to state 94
    IDENT         shift, and go to state 21
    LIT_INT_HEX   shift, and go to state 22
    LIT_INT_DEC   shift, and go to state 23
    LIT_FLOAT     shift, and go to state 24
    LIT_CHAR      shift, and go to state 25
    LIT_STRING    shift, and go to state 26
    OP_INCR       shift, and go to state 27
    OP_DECR       shift, and go to state 28
    TOK_SEMI      shift, and go to state 95
    TOK_CURLY_L   shift, and go to state 52
    TOK_PAREN_L   shift, and go to state 29
    TOK_NOT       shift, and go to state 30
    TOK_FLIP      shift, and go to state 31
    TOK_MINUS     shift, and go to state 32
    TOK_PLUS      shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 58
    expression                 go to state 97
    statement                  go to state 172
    compound_statement         go to state 100
    expression_statement       go to state 103
    selection_statement        go to state 104
    iteration_statement        go to state 105
    jump_statement             go to state 106


State 167

   81 iteration_statement: KWD_FOR TOK_PAREN_L var_definition expression_statement expression . TOK_PAREN_R statement

    TOK_PAREN_R  shift, and go to state 173


State 168

   78 iteration_statement: KWD_FOR TOK_PAREN_L expression_statement expression_statement TOK_PAREN_R . statement

    KWD_BREAK     shift, and go to state 89
    KWD_CONTINUE  shift, and go to state 90
    KWD_FOR       shift, and go to state 91
    KWD_IF        shift, and go to state 92
    KWD_RETURN    shift, and go to state 93
    KWD_WHILE     shift, and go to state 94
    IDENT         shift, and go to state 21
    LIT_INT_HEX   shift, and go to state 22
    LIT_INT_DEC   shift, and go to state 23
    LIT_FLOAT     shift, and go to state 24
    LIT_CHAR      shift, and go to state 25
    LIT_STRING    shift, and go to state 26
    OP_INCR       shift, and go to state 27
    OP_DECR       shift, and go to state 28
    TOK_SEMI      shift, and go to state 95
    TOK_CURLY_L   shift, and go to state 52
    TOK_PAREN_L   shift, and go to state 29
    TOK_NOT       shift, and go to state 30
    TOK_FLIP      shift, and go to state 31
    TOK_MINUS     shift, and go to state 32
    TOK_PLUS      shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 58
    expression                 go to state 97
    statement                  go to state 174
    compound_statement         go to state 100
    expression_statement       go to state 103
    selection_statement        go to state 104
    iteration_statement        go to state 105
    jump_statement             go to state 106


State 169

   79 iteration_statement: KWD_FOR TOK_PAREN_L expression_statement expression_statement expression . TOK_PAREN_R statement

    TOK_PAREN_R  shift, and go to state 175


State 170

   75 selection_statement: KWD_IF TOK_PAREN_L expression TOK_PAREN_R statement . KWD_ELSE statement
   76                    | KWD_IF TOK_PAREN_L expression TOK_PAREN_R statement .

    KWD_ELSE  shift, and go to state 176

    KWD_ELSE  [reduce using rule 76 (selection_statement)]
    $default  reduce using rule 76 (selection_statement)


State 171

   77 iteration_statement: KWD_WHILE TOK_PAREN_L expression TOK_PAREN_R statement .

    $default  reduce using rule 77 (iteration_statement)


State 172

   80 iteration_statement: KWD_FOR TOK_PAREN_L var_definition expression_statement TOK_PAREN_R statement .

    $default  reduce using rule 80 (iteration_statement)


State 173

   81 iteration_statement: KWD_FOR TOK_PAREN_L var_definition expression_statement expression TOK_PAREN_R . statement

    KWD_BREAK     shift, and go to state 89
    KWD_CONTINUE  shift, and go to state 90
    KWD_FOR       shift, and go to state 91
    KWD_IF        shift, and go to state 92
    KWD_RETURN    shift, and go to state 93
    KWD_WHILE     shift, and go to state 94
    IDENT         shift, and go to state 21
    LIT_INT_HEX   shift, and go to state 22
    LIT_INT_DEC   shift, and go to state 23
    LIT_FLOAT     shift, and go to state 24
    LIT_CHAR      shift, and go to state 25
    LIT_STRING    shift, and go to state 26
    OP_INCR       shift, and go to state 27
    OP_DECR       shift, and go to state 28
    TOK_SEMI      shift, and go to state 95
    TOK_CURLY_L   shift, and go to state 52
    TOK_PAREN_L   shift, and go to state 29
    TOK_NOT       shift, and go to state 30
    TOK_FLIP      shift, and go to state 31
    TOK_MINUS     shift, and go to state 32
    TOK_PLUS      shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 58
    expression                 go to state 97
    statement                  go to state 177
    compound_statement         go to state 100
    expression_statement       go to state 103
    selection_statement        go to state 104
    iteration_statement        go to state 105
    jump_statement             go to state 106


State 174

   78 iteration_statement: KWD_FOR TOK_PAREN_L expression_statement expression_statement TOK_PAREN_R statement .

    $default  reduce using rule 78 (iteration_statement)


State 175

   79 iteration_statement: KWD_FOR TOK_PAREN_L expression_statement expression_statement expression TOK_PAREN_R . statement

    KWD_BREAK     shift, and go to state 89
    KWD_CONTINUE  shift, and go to state 90
    KWD_FOR       shift, and go to state 91
    KWD_IF        shift, and go to state 92
    KWD_RETURN    shift, and go to state 93
    KWD_WHILE     shift, and go to state 94
    IDENT         shift, and go to state 21
    LIT_INT_HEX   shift, and go to state 22
    LIT_INT_DEC   shift, and go to state 23
    LIT_FLOAT     shift, and go to state 24
    LIT_CHAR      shift, and go to state 25
    LIT_STRING    shift, and go to state 26
    OP_INCR       shift, and go to state 27
    OP_DECR       shift, and go to state 28
    TOK_SEMI      shift, and go to state 95
    TOK_CURLY_L   shift, and go to state 52
    TOK_PAREN_L   shift, and go to state 29
    TOK_NOT       shift, and go to state 30
    TOK_FLIP      shift, and go to state 31
    TOK_MINUS     shift, and go to state 32
    TOK_PLUS      shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 58
    expression                 go to state 97
    statement                  go to state 178
    compound_statement         go to state 100
    expression_statement       go to state 103
    selection_statement        go to state 104
    iteration_statement        go to state 105
    jump_statement             go to state 106


State 176

   75 selection_statement: KWD_IF TOK_PAREN_L expression TOK_PAREN_R statement KWD_ELSE . statement

    KWD_BREAK     shift, and go to state 89
    KWD_CONTINUE  shift, and go to state 90
    KWD_FOR       shift, and go to state 91
    KWD_IF        shift, and go to state 92
    KWD_RETURN    shift, and go to state 93
    KWD_WHILE     shift, and go to state 94
    IDENT         shift, and go to state 21
    LIT_INT_HEX   shift, and go to state 22
    LIT_INT_DEC   shift, and go to state 23
    LIT_FLOAT     shift, and go to state 24
    LIT_CHAR      shift, and go to state 25
    LIT_STRING    shift, and go to state 26
    OP_INCR       shift, and go to state 27
    OP_DECR       shift, and go to state 28
    TOK_SEMI      shift, and go to state 95
    TOK_CURLY_L   shift, and go to state 52
    TOK_PAREN_L   shift, and go to state 29
    TOK_NOT       shift, and go to state 30
    TOK_FLIP      shift, and go to state 31
    TOK_MINUS     shift, and go to state 32
    TOK_PLUS      shift, and go to state 33

    primary_expression         go to state 34
    constant                   go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    multiplicative_expression  go to state 38
    additive_expression        go to state 39
    shift_expression           go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    and_expression             go to state 43
    xor_expression             go to state 44
    or_expression              go to state 45
    log_and_expression         go to state 46
    log_or_expression          go to state 47
    conditional_expression     go to state 48
    assignment_expression      go to state 58
    expression                 go to state 97
    statement                  go to state 179
    compound_statement         go to state 100
    expression_statement       go to state 103
    selection_statement        go to state 104
    iteration_statement        go to state 105
    jump_statement             go to state 106


State 177

   81 iteration_statement: KWD_FOR TOK_PAREN_L var_definition expression_statement expression TOK_PAREN_R statement .

    $default  reduce using rule 81 (iteration_statement)


State 178

   79 iteration_statement: KWD_FOR TOK_PAREN_L expression_statement expression_statement expression TOK_PAREN_R statement .

    $default  reduce using rule 79 (iteration_statement)


State 179

   75 selection_statement: KWD_IF TOK_PAREN_L expression TOK_PAREN_R statement KWD_ELSE statement .

    $default  reduce using rule 75 (selection_statement)
